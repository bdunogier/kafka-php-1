This is an alternative to the existing Kafka PHP Client which is in the incubator,
the main motivation to write it was that it seemed important
that the fetch requests are not loaded entirely into memory but
pulled continuously from the socket as well as the fact that php has a different control flow
and communication pattern (each request is a thread within http server)
so the api doesn't need to follow the scala/java object graph and can be much simpler.
 
    There are few differences to the existing Kafka PHP client: 
    - streaming message individually rather than loading the whole response into memory
    - offset implemented by hexdecimal tranformation to fully support Kafka long offsets 
    - gzip working correctly both ways, including the pre-compression message header
    - crc32 check working
    - ProduceRequest and FetchRequests can use wire format 0 and 1
    - Broker abstraction for different connection strategies
    - OffsetRequest workaround for 64-bit unix timestamp
    - Produce Request only checks correct bytes were sent (ack not available)


Examples

/>php ./scripts/consumer.php  
/>php ./scripts/producer.php


TODOs

IN PROGRESS maxSize check when fetching and throw Kafka_Exception when overflown
IN PROGRESS add getTopic() for Message 
TODO Snappy compression (could not compile snappy.so on 64-bit) 
TODO implement produce acknowledgement once implemented in kafka (maybe add look at the jira to do it)